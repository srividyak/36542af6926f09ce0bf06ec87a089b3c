{
  "name": "node-curl",
  "version": "0.1.8",
  "author": {
    "name": "Jiang Miao",
    "email": "jiangfriend@gmail.com"
  },
  "description": "node wrapper for multi curl, fully implemented.",
  "keywords": [
    "node-curl",
    "curl",
    "multi-curl",
    "mcurl"
  ],
  "homepage": "http://github.com/jiangmiao/node-curl",
  "repository": {
    "type": "git",
    "url": "git://github.com/jiangmiao/node-curl.git"
  },
  "main": "./lib",
  "scripts": {
    "install": "sh src/generate_curl_options_list.sh && (node-gyp rebuild || node-waf configure build)"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "node-curl [![Build Status](https://secure.travis-ci.org/jiangmiao/node-curl.png?branch=master)](http://travis-ci.org/jiangmiao/node-curl)\n=========\n\nnode cURL wrapper, support all options and infos.\n\nQuick Start\n-----------\n\n* quick start\n\n        curl = require('node-curl');\n        curl('www.google.com', function(err) {\n          console.info(this.status);\n          console.info('-----');\n          console.info(this.body);\n          console.info('-----');\n          console.info(this.info('SIZE_DOWNLOAD'));\n        });\n\n\n* with options\n\n        curl = require('node-curl')\n        curl('www.google.com', {VERBOSE: 1, RAW: 1}, function(err) {\n          console.info(this);\n        });\n\n* run the example/test.js\n\n        node examples/test.js\n\nUsage\n-----\n\n* curl\n\n        curl(url, [options = {}], callback)\n        callback includes 1 parameters (error)\n        result is stored in curl\n\n* Retrieve Data from curl\n\n        members:\n          status           - Http Response code\n          body             - Http body\n\n          url              - the url set by curl(...)\n          options          - the options set by curl(...)\n          defaultOptions   - the defaultOptions\n          effectiveOptions - the options curl used\n\n        methods:\n          info(name) - Get information of result, see 'info' section\n\n* Curl Control\n\n        members\n            debug (default: false)\n                - logging node-curl debug info\n\n        methods:\n            void reset()\n                - reset curl and set options to default options\n\n            void setDefaultOptions(options, reset = true)\n                - set default options\n\n            curl create(defaultOptions)\n                - create a new curl with default options\n\nOptions\n-------\n* Any cURL Easy Options\n\n        eg: CURLOPT_VERBOSE will be VERBOSE, CURLOPT_HEADER will be HEADER\n\n        Full list at http://curl.haxx.se/libcurl/c/curl_easy_setopt.html\n\n* node-curl Extra Options\n\n        RAW   - Returns Buffer instead of String in result.body\n        DEBUG - Replace curl.debug\n\n* About slist parameters\n\n        node-curl support slist which map to Javascript Array\n\n        eg:\n            HTTP_HEADER: ['FOO', 'BAR']\n            HTTP_HEADER: 'FOO'\n\n            any non-array parameter will convert to [ parameter.toString() ]\n\nInfos\n-----\n* Any cURL Info options\n\n        eg: CURLINFO_EFFECTIVE_URL will be EFFETCTIVE_URL\n\n        full list at http://curl.haxx.se/libcurl/c/curl_easy_getinfo.html\n\n\n* About slist\n\n          slist will be returns in Array\n          eg: CURLINFO_COOKIELIST\n",
  "readmeFilename": "README.md",
  "_id": "node-curl@0.1.8",
  "dist": {
    "shasum": "9440d2e1d92ca2205f716c8dbd7120ef521e8903"
  },
  "_from": "node-curl@",
  "_resolved": "https://registry.npmjs.org/node-curl/-/node-curl-0.1.8.tgz"
}
